<Application x:Class="TaskPulse.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TaskPulse">
    <Application.Resources>

        <Style x:Key="titleText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#ffffff"/>
        </Style>

        <Style x:Key="normalText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="LineHeight" Value="28"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#ffffff"/>
        </Style>

        <Style x:Key="button" TargetType="Button">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#fdfefe"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="White" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F6F6F6"/>
                    <Setter Property="Foreground" Value="DimGray"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#F6F6F6"/>
                    <Setter Property="Foreground" Value="DimGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="buttonCircle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Margin" Value="8 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderThickness="1" BorderBrush="#878787" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#d9d9d9"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#c4c4c4"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="textHint" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="Foreground" Value="#acb0af"/>
        </Style>

        <Style x:Key="textBox" TargetType="Control">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="Foreground" Value="#878787"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style x:Key="mainbutton" TargetType="Button">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="0 20 0 0"/>
            <Setter Property="Background" Value="#00A19A"/>
            <Setter Property="Foreground" Value="#FDFEFE"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="#49B7A3" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#339685"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#2d7a6c"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="imgClose" TargetType="Image">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0 13 13 0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="buttonDef" TargetType="Button">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="230"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#fdfefe"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="White" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e8e8e8"/>
                    <Setter Property="Foreground" Value="DimGray"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#d9d9d9"/>
                    <Setter Property="Foreground" Value="DimGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="navigationButtonActive" TargetType="Button">
            <Setter Property="Background" Value="#00A19A"/>
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="45"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="16" BorderThickness="1" BorderBrush="#49B7A3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#339685"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#2d7a6c"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="navigationButtonDefault" TargetType="Button">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="45"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="16">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F6F6F6"/>

                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#EEEEEE"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--    Комбобокс   -->
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{DynamicResource AppBackgroundColor}"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="8" Grid.ColumnSpan="2"/>

                            <!-- Отображение выбранного элемента с цветом -->
                            <TextBlock x:Name="ContentPresenter"
                                Text="{TemplateBinding SelectionBoxItem}"
                                Foreground="Black"
                                VerticalAlignment="Center"
                                Margin="5"
                                FontSize="18"
                            />    
                            <ToggleButton x:Name="DropDownToggle"
                                    Grid.Column="1"
                                    Background="White"
                                    BorderThickness="0"
                                    HorizontalAlignment="Right"
                                    IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <ToggleButton.Content>
                                        <Path Data="M 0 0 L 8 8 L 16 0" Stroke="#00A19A" StrokeThickness="2"/>
                                    </ToggleButton.Content>
                            </ToggleButton>
                            <Popup x:Name="Popup" Placement="Bottom" StaysOpen="False" IsOpen="{TemplateBinding IsDropDownOpen}" MaxWidth="180">
                                <Border Background="White" CornerRadius="8" Padding="2">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedItem.Content, RelativeSource={RelativeSource Self}}" Value="Запланировано">
                    <Setter Property="Background" Value="{DynamicResource PlannedColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Content, RelativeSource={RelativeSource Self}}" Value="В работе">
                    <Setter Property="Background" Value="{DynamicResource InProgressColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Content, RelativeSource={RelativeSource Self}}" Value="Готово">
                    <Setter Property="Background" Value="{DynamicResource DoneColor}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border" Padding="8,4" CornerRadius="4">
                            <TextBlock x:Name="ItemText" Text="{TemplateBinding Content}" Foreground="Black"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Self}}"/>
                                <Setter TargetName="ItemText" Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Цвета для статусов -->
        <Style TargetType="ComboBoxItem" x:Key="PlannedItemStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{DynamicResource PlannedColor}"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <Style TargetType="ComboBoxItem" x:Key="InProgressItemStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{DynamicResource InProgressColor}"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <Style TargetType="ComboBoxItem" x:Key="DoneItemStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{DynamicResource DoneColor}"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <!-- Определение ресурсов для динамических цветов -->
        <SolidColorBrush x:Key="AppBackgroundColor" Color="White"/>
        <SolidColorBrush x:Key="PlannedColor" Color="#0078D7"/>
        <SolidColorBrush x:Key="InProgressColor" Color="#EAA000"/>
        <SolidColorBrush x:Key="DoneColor" Color="#28A745"/>



    </Application.Resources>
</Application>
